<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohei.mybatis.mbg.mapper.MoneyMapper">
  <resultMap id="BaseResultMap" type="com.ohei.mybatis.mbg.model.Money">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="basic" jdbcType="INTEGER" property="basic" />
    <result column="reward" jdbcType="INTEGER" property="reward" />
    <result column="punishment" jdbcType="INTEGER" property="punishment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, basic, reward, punishment
  </sql>
  <select id="selectByExample" parameterType="com.ohei.mybatis.mbg.model.MoneyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from money
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from money
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from money
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ohei.mybatis.mbg.model.MoneyExample">
    delete from money
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ohei.mybatis.mbg.model.Money">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into money (basic, reward, punishment
      )
    values (#{basic,jdbcType=INTEGER}, #{reward,jdbcType=INTEGER}, #{punishment,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ohei.mybatis.mbg.model.Money">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into money
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="basic != null">
        basic,
      </if>
      <if test="reward != null">
        reward,
      </if>
      <if test="punishment != null">
        punishment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="basic != null">
        #{basic,jdbcType=INTEGER},
      </if>
      <if test="reward != null">
        #{reward,jdbcType=INTEGER},
      </if>
      <if test="punishment != null">
        #{punishment,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ohei.mybatis.mbg.model.MoneyExample" resultType="java.lang.Integer">
    select count(*) from money
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update money
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.basic != null">
        basic = #{record.basic,jdbcType=INTEGER},
      </if>
      <if test="record.reward != null">
        reward = #{record.reward,jdbcType=INTEGER},
      </if>
      <if test="record.punishment != null">
        punishment = #{record.punishment,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update money
    set id = #{record.id,jdbcType=INTEGER},
      basic = #{record.basic,jdbcType=INTEGER},
      reward = #{record.reward,jdbcType=INTEGER},
      punishment = #{record.punishment,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ohei.mybatis.mbg.model.Money">
    update money
    <set>
      <if test="basic != null">
        basic = #{basic,jdbcType=INTEGER},
      </if>
      <if test="reward != null">
        reward = #{reward,jdbcType=INTEGER},
      </if>
      <if test="punishment != null">
        punishment = #{punishment,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ohei.mybatis.mbg.model.Money">
    update money
    set basic = #{basic,jdbcType=INTEGER},
      reward = #{reward,jdbcType=INTEGER},
      punishment = #{punishment,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>